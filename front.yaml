apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-deployment 
spec:
  selector:
    matchLabels: 
      app: react
  replicas: 3
  template:
    metadata: 
      labels:
        app: react
    spec:
      nodeSelector:
        kubernetes.io/hostname: contest22-node-w-54b5
      containers:
      - name: react-container
        image: greenaccounter.kr.ncr.ntruss.com/front:latest
        ports: 
        - containerPort: 80
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: react-service
  annotations:
    service.beta.kubernetes.io/ncloud-load-balancer-layer-type: "nplb"
    service.beta.kubernetes.io/ncloud-load-balancer-internal: "false"
    service.beta.kubernetes.io/ncloud-load-balancer-size: "SMALL"
    service.beta.kubernetes.io/ncloud-load-balancer-ssl-certificate-no: "33250"
    alb.ingress.kubernetes.io/healthcheck-path: '/'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: "80"
    alb.ingress.kubernetes.io/enable-sticky-session: "false"
spec:
  type: LoadBalancer
  ports:
  - port: 80 # 서비스의 클러스터IP port
    targetPort: 80 # 컨테이너 port
    protocol: TCP
    name: http
  - port: 443 # HTTPS
    targetPort: 80 # 컨테이너 HTTP로 통신
    protocol: TCP
    name: https
  selector:
    app: react
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: react-ingress
  annotations:
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-path: '/'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/load-balancer-size: small
    alb.ingress.kubernetes.io/network-type: public
spec:
  ingressClassName: alb
  rules:
  - host: greenaccounter.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: react-service
            port:
              number: 80
      - path: /form
        pathType: Prefix
        backend:
          service:
            name: react-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: flask-api-service
            port:
              number: 10000
      - path: /ci
        pathType: Prefix
        backend:
          service:
            name: flask-ci-service
            port:
              number: 10002
      - path: /res
        pathType: Prefix
        backend:
          service:
            name: flask-res-service
            port:
              number: 10001
      - path: /mgnt
        pathType: Prefix
        backend:
          service:
            name: flask-mgnt-service
            port:
              number: 10003
